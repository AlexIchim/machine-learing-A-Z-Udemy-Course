print("Hello World")
cd ..
ls
file:///C:/Users/TekAdvice/Desktop/Machine Learning A-Z Template Folder/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------/MyPreProcessing/Data.csv
file:///C:/Users/TekAdvice/Desktop/Machine Learning A-Z Template Folder/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------/MyPreProcessing/data_preprocessing_template.py
file:///C:/Users/TekAdvice/Desktop/Machine Learning A-Z Template Folder/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------/MyPreProcessing/untitled1.py
system("python \"C:/Users/TekAdvice/Desktop/Machine Learning A-Z Template Folder/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------/RPreProcessing/data_preprocessing_template.py\"")
dataset = read.csv('Data.csv')
ls
setwd("C:/Users/TekAdvice/Desktop/Desktop/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 8 - Decision Tree Regression")
install.packages('rpart')
library(rpart)
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
View(dataset)
View(dataset)
library(rpart)
regressor = rpart(formula = Salary ~ .,
data = dataset)
summary(regressor)
y_pred = predict(regressor, data.frame(Level = 6.5))
y_pred
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff ( Decision Tree Regression)') +
xlab('Level') +
ylab('Salary')
library(rpart)
regressor = rpart(formula = Salary ~ .,
data = dataset,
control = rpart.control(minsplit = 1))
y_pred = predict(regressor, data.frame(Level = 6.5))
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff ( Decision Tree Regression)') +
xlab('Level') +
ylab('Salary')
y_pred
# Visualising the Regression Model results (for higher resolution and smoother curve)
# install.packages('ggplot2')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Decision Tree Regression)') +
xlab('Level') +
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Decision Tree Regression)') +
xlab('Level') +
ylab('Salary')
y_pred
setwd("C:/Users/TekAdvice/Desktop/Desktop/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 9 - Random Forest Regression")
install.packages('randomForest')
library(randomForest)
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
library(randomForest)
set.seed(1234)
regressor = randomForest( x = dataset[1],
y = dataset$Salary,
ntree = 10)
y_pred = predict(regressor, data.frame(Level = 6.5))
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Random Forest Regression)') +
xlab('Level') +
ylab('Salary')
library(randomForest)
set.seed(1234)
regressor = randomForest( x = dataset[1],
y = dataset$Salary,
ntree = 100)
# Predicting a new result
y_pred = predict(regressor, data.frame(Level = 6.5))
library(randomForest)
set.seed(1234)
regressor = randomForest( x = dataset[1],
y = dataset$Salary,
ntree = 300)
# Predicting a new result
y_pred = predict(regressor, data.frame(Level = 6.5))
# Vis
# install.packages('ggplot2')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Random Forest Regression)') +
xlab('Level') +
ylab('Salary')
library(randomForest)
set.seed(1234)
regressor = randomForest( x = dataset[1],
y = dataset$Salary,
ntree = 500)
# Predicting a new result
y_pred = predict(regressor, data.frame(Level = 6.5))
library(randomForest)
set.seed(1234)
regressor = randomForest( x = dataset[1],
y = dataset$Salary,
ntree = 1000)
# Predicting a new result
y_pred = predict(regressor, data.frame(Level = 6.5))
